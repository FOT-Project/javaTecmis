/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Lecturer;

import Alerts.Failed_Alert;
import Auth.Auth;
import Auth.StudentInstance;
import DBConn.DB;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author USER
 */
public class lecturer_see_Marks_Grades extends javax.swing.JFrame {

    /**
     * Creates new form lecturer_see_Marks_Grades
     */
    public lecturer_see_Marks_Grades() {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel8 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        stuidlbl = new javax.swing.JLabel();
        deptname = new javax.swing.JPanel();
        deptlbl = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        courselbl = new javax.swing.JLabel();
        lblca = new javax.swing.JPanel();
        calbl = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        cid = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel14.setText("jLabel14");

        jLabel15.setText("jLabel15");

        jToggleButton1.setText("jToggleButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel1.setFont(new java.awt.Font("Iskoola Pota", 1, 48)); // NOI18N
        jLabel1.setText("CA Marks");

        jLabel3.setFont(new java.awt.Font("Iskoola Pota", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 153, 153));
        jLabel3.setText("Department");

        jLabel4.setFont(new java.awt.Font("Iskoola Pota", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 153, 153));
        jLabel4.setText("Course Name");

        jLabel5.setFont(new java.awt.Font("Iskoola Pota", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 153, 153));
        jLabel5.setText("CA Marks");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        stuidlbl.setFont(new java.awt.Font("Iskoola Pota", 0, 20)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(stuidlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(stuidlbl)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        deptname.setBackground(new java.awt.Color(255, 255, 255));

        deptlbl.setFont(new java.awt.Font("Iskoola Pota", 0, 20)); // NOI18N

        javax.swing.GroupLayout deptnameLayout = new javax.swing.GroupLayout(deptname);
        deptname.setLayout(deptnameLayout);
        deptnameLayout.setHorizontalGroup(
            deptnameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deptnameLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(deptlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(449, Short.MAX_VALUE))
        );
        deptnameLayout.setVerticalGroup(
            deptnameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deptnameLayout.createSequentialGroup()
                .addComponent(deptlbl)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        courselbl.setFont(new java.awt.Font("Iskoola Pota", 0, 20)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(courselbl, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(431, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(courselbl)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblca.setBackground(new java.awt.Color(255, 255, 255));

        calbl.setFont(new java.awt.Font("Iskoola Pota", 0, 20)); // NOI18N

        javax.swing.GroupLayout lblcaLayout = new javax.swing.GroupLayout(lblca);
        lblca.setLayout(lblcaLayout);
        lblcaLayout.setHorizontalGroup(
            lblcaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lblcaLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(calbl, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(433, Short.MAX_VALUE))
        );
        lblcaLayout.setVerticalGroup(
            lblcaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lblcaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(calbl)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel16.setFont(new java.awt.Font("Iskoola Pota", 1, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(153, 153, 153));
        jLabel16.setText("Student ID ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5))
                        .addComponent(jLabel16))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(22, 22, 22)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deptname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(26, 26, 26))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deptname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(104, 104, 104))
        );

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Go Back.png"))); // NOI18N
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Prize.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Iskoola Pota", 1, 24)); // NOI18N
        jLabel2.setText("Enter Subject ID ");

        jPanel9.setBackground(new java.awt.Color(217, 217, 217));
        jPanel9.setForeground(new java.awt.Color(217, 217, 217));

        jLabel17.setFont(new java.awt.Font("Iskoola Pota", 0, 20)); // NOI18N

        cid.setFont(new java.awt.Font("Iskoola Pota", 0, 20)); // NOI18N
        cid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cidActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(507, 507, 507)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cid, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cid)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17))
        );

        jButton1.setBackground(new java.awt.Color(76, 159, 255));
        jButton1.setFont(new java.awt.Font("Iskoola Pota", 1, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Search");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 86, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(91, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jButton1)
                .addGap(314, 314, 314))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(250, 250, 250)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(96, 96, 96))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // TODO add your handling code here:
        lecturer_examinations MarksGrades = new lecturer_examinations();
        MarksGrades.show();
        dispose();
    }//GEN-LAST:event_jLabel7MouseClicked

    private void cidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cidActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String subid = cid.getText();
        double finals1ca;

        DB db = new DB();
        db.getconnect();

        StudentInstance studentusername = StudentInstance.getInstance();
        String stuusername = studentusername.getUsername();

        System.out.println(stuusername);

        //String mysql = "select department.dep_name, course.c_name from (users inner join department on department.dep_id = users.dep_id) inner join course on course.c_id = users.c_id) where course.c_id = '"+subid+"' ";
        //String mysql = "SELECT department.dep_id, course.c_id FROM department INNER JOIN Course c ON d.dept_id = c.dept_id INNER JOIN User u ON u.user_id = :user_id WHERE users.user_id = '"user"'";
        System.out.println(subid);
        try {

            if (subid.equals("ICT1113")) {

                String sub1 = "SELECT ca_2023_ICT1113.q1, ca_2023_ICT1113.q2, ca_2023_ICT1113.q3, ca_2023_ICT1113.mid, users.dep_id, course.c_name FROM ca_2023_ICT1113 JOIN users ON ca_2023_ICT1113.s_id = users.user_id JOIN course ON users.c_id = course.c_id WHERE ca_2023_ICT1113.s_id = '" + stuusername + "'";

                ResultSet res1 = db.stm.executeQuery(sub1);

                if (res1.next()) {
                    int s1q1 = res1.getInt("q1");
                    int s1q2 = res1.getInt("q2");
                    int s1q3 = res1.getInt("q3");
                    int s1mid = res1.getInt("mid");
                    String dep = res1.getString("dep_id");
                    String cname = res1.getString("c_name");

                    int max1, max2;

                    if (s1q1 >= s1q2 && s1q1 >= s1q3) {
                        max1 = s1q1;
                        if (s1q2 >= s1q3) {
                            max2 = s1q2;
                        } else {
                            max2 = s1q3;
                        }
                    } else if (s1q2 >= s1q1 && s1q2 >= s1q3) {
                        max1 = s1q2;
                        if (s1q1 >= s1q3) {
                            max2 = s1q1;
                        } else {
                            max2 = s1q3;
                        }
                    } else {
                        max1 = s1q3;
                        if (s1q1 >= s1q2) {
                            max2 = s1q1;
                        } else {
                            max2 = s1q2;
                        }
                    }
                    System.out.println("The two maximum values are: " + max1 + " and " + max2);

                    double finalQuizRes1 = ((double) max1 + max2) / 2.0 * 0.1;
                    double finalMidRes1 = (double) s1mid * 0.2;
                    finals1ca = (double) finalQuizRes1 + finalMidRes1;

                    stuidlbl.setText(stuusername);
                    calbl.setText(Double.toString(finals1ca));
                    deptlbl.setText(dep);
                    courselbl.setText(cname);
                }
            }
            else if (subid.equals("ICT1123")) {
                    String sub2 = "SELECT ca_2023_ICT1123.q1, ca_2023_ICT1123.q2, ca_2023_ICT1123.q3,ca_2023_ICT1123.q4,ca_2023_ICT1123.mid,ca_2023_ICT1123.ass1, ca_2023_ICT1123.ass2, users.dep_id, course.c_name FROM ca_2023_ICT1123 JOIN users ON ca_2023_ICT1123.s_id = users.user_id JOIN course ON users.c_id = course.c_id WHERE ca_2023_ICT1123.s_id = '" + stuusername + "'";
                    System.out.println(sub2);
                    ResultSet res2 = db.stm.executeQuery(sub2);

                    if (res2.next()) {
                        int s2q1 = res2.getInt("q1");
                        int s2q2 = res2.getInt("q2");
                        int s2q3 = res2.getInt("q3");
                        int s2q4 = res2.getInt("q4");
                        int s2mid = res2.getInt("mid");
                        int s2ass1 = res2.getInt("ass1");
                        int s2ass2 = res2.getInt("ass2");
                        String dep = res2.getString("dep_id");
                        String cname = res2.getString("c_name");

                        int max1, max2, max3;

                        if (s2q1 >= s2q2 && s2q1 >= s2q3 && s2q1 >= s2q4) {
                            max1 = s2q1;
                            if (s2q2 >= s2q3 && s2q2 >= s2q4) {
                                max2 = s2q2;
                                if (s2q3 >= s2q4) {
                                    max3 = s2q3;
                                } else {
                                    max3 = s2q4;
                                }
                            } else if (s2q3 >= s2q2 && s2q3 >= s2q4) {
                                max2 = s2q3;
                                if (s2q2 >= s2q4) {
                                    max3 = s2q2;
                                } else {
                                    max3 = s2q4;
                                }
                            } else {
                                max2 = s2q4;
                                if (s2q2 >= s2q3) {
                                    max3 = s2q2;
                                } else {
                                    max3 = s2q3;
                                }
                            }
                        } else if (s2q2 >= s2q1 && s2q2 >= s2q3 && s2q2 >= s2q4) {
                            max1 = s2q2;
                            if (s2q1 >= s2q3 && s2q1 >= s2q4) {
                                max2 = s2q1;
                                if (s2q3 >= s2q4) {
                                    max3 = s2q3;
                                } else {
                                    max3 = s2q4;
                                }
                            } else if (s2q3 >= s2q1 && s2q3 >= s2q4) {
                                max2 = s2q3;
                                if (s2q1 >= s2q4) {
                                    max3 = s2q1;
                                } else {
                                    max3 = s2q4;
                                }
                            } else {
                                max2 = s2q4;
                                if (s2q1 >= s2q3) {
                                    max3 = s2q1;
                                } else {
                                    max3 = s2q3;
                                }
                            }
                        } else if (s2q3 >= s2q1 && s2q3 >= s2q2 && s2q3 >= s2q4) {
                            max1 = s2q3;
                            if (s2q1 >= s2q2 && s2q1 >= s2q4) {
                                max2 = s2q1;
                                if (s2q2 >= s2q4) {
                                    max3 = s2q2;
                                } else {
                                    max3 = s2q4;
                                }
                            } else if (s2q2 >= s2q1 && s2q2 >= s2q4) {
                                max2 = s2q2;
                                if (s2q1 >= s2q4) {
                                    max3 = s2q1;
                                } else {
                                    max3 = s2q4;
                                }
                            } else {
                                max2 = s2q4;
                                if (s2q1 >= s2q2) {
                                    max3 = s2q1;
                                } else {
                                    max3 = s2q2;
                                }
                            }
                        } else {
                            max1 = s2q4;
                            if (s2q1 >= s2q2 && s2q1 >= s2q3) {
                                max2 = s2q1;
                                if (s2q2 >= s2q3) {
                                    max3 = s2q2;
                                } else {
                                    max3 = s2q3;
                                }
                            } else if (s2q2 >= s2q1 && s2q2 >= s2q3) {
                                max2 = s2q2;
                                if (s2q1 >= s2q3) {
                                    max3 = s2q1;
                                } else {
                                    max3 = s2q3;
                                }
                            } else {
                                max2 = s2q3;
                                if (s2q1 >= s2q2) {
                                    max3 = s2q1;
                                } else {
                                    max3 = s2q2;
                                }
                            }
                        }
                        System.out.println("The three maximum values are: " + max1 + " and " + max2 + " and " + max3);

                        double sumQuizDouble2 = (double) max1 + max2 + max3;
                        double finalQuizRes2 = (sumQuizDouble2 / 3) * 0.1;
                        double sumAssDouble2 = (double) s2ass1 + s2ass2;
                        double finalAssRes2 = (sumAssDouble2 / 2) * 0.1;
                        double finalMidRes2 = (double) s2mid * 0.2;
                        double finalCaMarks2 = finalQuizRes2 + finalAssRes2 + finalMidRes2;

                        stuidlbl.setText(stuusername);
                        calbl.setText(Double.toString(finalCaMarks2));
                        deptlbl.setText(dep);
                        courselbl.setText(cname);
                    }
            }    
                    
                    else if (subid.equals("ICT1133")){
                       System.out.println("subject 3 executed");
                       String sub3 = "SELECT ca_2023_ICT1133.q1, ca_2023_ICT1133.q2, ca_2023_ICT1133.q3,ca_2023_ICT1133.ass1,ca_2023_ICT1133.ass2,users.dep_id, course.c_name FROM ca_2023_ICT1133 JOIN users ON ca_2023_ICT1133.s_id = users.user_id JOIN course ON users.c_id = course.c_id WHERE ca_2023_ICT1133.s_id = '" + stuusername + "'";
                       System.out.println(sub3);
                       ResultSet res3 = db.stm.executeQuery(sub3);
                       
                       if(res3.next()){
                    int s3q1 = res3.getInt("q1");
                    int s3q2 = res3.getInt("q2");
                    int s3q3 = res3.getInt("q3");
                    int s3ass1 = res3.getInt("ass1");
                    int s3ass2 = res3.getInt("ass2");
                    String dep = res3.getString("dep_id");
                    String cname = res3.getString("c_name");
                    
                    int max1, max2;

                    if (s3q1 >= s3q2 && s3q1 >= s3q3) {
                        max1 = s3q1;
                        if (s3q2 >= s3q3) {
                            max2 = s3q2;
                        } else {
                            max2 = s3q3;
                        }
                    } else if (s3q2 >= s3q1 && s3q2 >= s3q3) {
                        max1 = s3q2;
                        if (s3q1 >= s3q3) {
                            max2 = s3q1;
                        } else {
                            max2 = s3q3;
                        }
                    } else {
                        max1 = s3q3;
                        if (s3q1 >= s3q2) {
                            max2 = s3q1;
                        } else {
                            max2 = s3q2;
                        }
                    }
                    System.out.println("The two maximum values are: " + max1 + " and " + max2);

                    double sumQuizDouble3 = (double)max1+max2;
                    double finalQuizRes3 = (sumQuizDouble3/2)*0.1;
                    double sumAssDouble3 = (double)s3ass1+s3ass2;
                    double finalAssRes3 = (sumAssDouble3/2)*0.2;
                    double finalCaMarks3 = finalQuizRes3 + finalAssRes3;
                    
                    stuidlbl.setText(stuusername);
                    calbl.setText(Double.toString(finalCaMarks3));
                    deptlbl.setText(dep);
                    courselbl.setText(cname);
                       }     
                        
                    }
                    
                    else if (subid.equals("ICT1143")){
                       System.out.println("subject 4 executed");
                       String sub4 = "SELECT ca_2023_ICT1143.q1, ca_2023_ICT1143.q2, ca_2023_ICT1143.q3,ca_2023_ICT1143.ass1,ca_2023_ICT1143.ass2,users.dep_id, course.c_name FROM ca_2023_ICT1143 JOIN users ON ca_2023_ICT1143.s_id = users.user_id JOIN course ON users.c_id = course.c_id WHERE ca_2023_ICT1143.s_id = '" + stuusername + "'";
                       System.out.println(sub4);
                       ResultSet res4 = db.stm.executeQuery(sub4);
                       
                       if(res4.next()){
                    int s4q1 = res4.getInt("q1");
                    int s4q2 = res4.getInt("q2");
                    int s4q3 = res4.getInt("q3");
                    int s4ass1 = res4.getInt("ass1");
                    int s4ass2 = res4.getInt("ass2");
                    String dep = res4.getString("dep_id");
                    String cname = res4.getString("c_name");
                    
                    int max1, max2;

                    if (s4q1 >= s4q2 && s4q1 >= s4q3) {
                        max1 = s4q1;
                        if (s4q2 >= s4q3) {
                            max2 = s4q2;
                        } else {
                            max2 = s4q3;
                        }
                    } else if (s4q2 >= s4q1 && s4q2 >= s4q3) {
                        max1 = s4q2;
                        if (s4q1 >= s4q3) {
                            max2 = s4q1;
                        } else {
                            max2 = s4q3;
                        }
                    } else {
                        max1 = s4q3;
                        if (s4q1 >= s4q2) {
                            max2 = s4q1;
                        } else {
                            max2 = s4q2;
                        }
                    }
                    System.out.println("The two maximum values are: " + max1 + " and " + max2);

                    double sumQuizDouble4 = (double)max1+max2;
                    double finalQuizRes4 = (sumQuizDouble4/2)*0.1;
                    double sumAssDouble4 = (double)s4ass1+s4ass2;
                    double finalAssRes4 = (sumAssDouble4/2)*0.2;
                    double finalCaMarks4 = finalQuizRes4 + finalAssRes4;
                    
                    stuidlbl.setText(stuusername);
                    calbl.setText(Double.toString(finalCaMarks4));
                    deptlbl.setText(dep);
                    courselbl.setText(cname);
                       }     
                        
                    }
                    
                    else if (subid.equals("TMS1113")) {

                String sub5 = "SELECT ca_2023_TMS1113.q1, ca_2023_TMS1113.q2, ca_2023_TMS1113.q3, ca_2023_TMS1113.mid, users.dep_id, course.c_name FROM ca_2023_TMS1113 JOIN users ON ca_2023_TMS1113.s_id = users.user_id JOIN course ON users.c_id = course.c_id WHERE ca_2023_TMS1113.s_id = '" + stuusername + "'";

                ResultSet res5 = db.stm.executeQuery(sub5);

                if (res5.next()) {
                    int s5q1 = res5.getInt("q1");
                    int s5q2 = res5.getInt("q2");
                    int s5q3 = res5.getInt("q3");
                    int s5mid = res5.getInt("mid");
                    String dep = res5.getString("dep_id");
                    String cname = res5.getString("c_name");

                    int max1, max2;

                    if (s5q1 >= s5q2 && s5q1 >= s5q3) {
                        max1 = s5q1;
                        if (s5q2 >= s5q3) {
                            max2 = s5q2;
                        } else {
                            max2 = s5q3;
                        }
                    } else if (s5q2 >= s5q1 && s5q2 >= s5q3) {
                        max1 = s5q2;
                        if (s5q1 >= s5q3) {
                            max2 = s5q1;
                        } else {
                            max2 = s5q3;
                        }
                    } else {
                        max1 = s5q3;
                        if (s5q1 >= s5q2) {
                            max2 = s5q1;
                        } else {
                            max2 = s5q2;
                        }
                    }
                    System.out.println("The two maximum values are: " + max1 + " and " + max2);

                    double finalQuizRes5 =((double) max1 + max2) / 2.0 * 0.1;
                    double finalMidRes5 = (double) s5mid * 0.2;
                    double finals5ca = (double) finalQuizRes5 + finalMidRes5;

                    stuidlbl.setText(stuusername);
                    calbl.setText(Double.toString(finals5ca));
                    deptlbl.setText(dep);
                    courselbl.setText(cname);
                }
            }
                    
                    else if (subid.equals("ENG1114")) {

                String sub6 = "SELECT ca_2023_ENG1114.q1, ca_2023_ENG1114.q2, ca_2023_ENG1114.q3, ca_2023_ENG1114.mid, users.dep_id, course.c_name FROM ca_2023_ENG1114 JOIN users ON ca_2023_ENG1114.s_id = users.user_id JOIN course ON users.c_id = course.c_id WHERE ca_2023_ENG1114.s_id = '" + stuusername + "'";

                ResultSet res6 = db.stm.executeQuery(sub6);

                if (res6.next()) {
                    int s6q1 = res6.getInt("q1");
                    int s6q2 = res6.getInt("q2");
                    int s6q3 = res6.getInt("q3");
                    int s6mid = res6.getInt("mid");
                    String dep = res6.getString("dep_id");
                    String cname = res6.getString("c_name");

                    int max1, max2;

                    if (s6q1 >= s6q2 && s6q1 >= s6q3) {
                        max1 = s6q1;
                        if (s6q2 >= s6q3) {
                            max2 = s6q2;
                        } else {
                            max2 = s6q3;
                        }
                    } else if (s6q2 >= s6q1 && s6q2 >= s6q3) {
                        max1 = s6q2;
                        if (s6q1 >= s6q3) {
                            max2 = s6q1;
                        } else {
                            max2 = s6q3;
                        }
                    } else {
                        max1 = s6q3;
                        if (s6q1 >= s6q2) {
                            max2 = s6q1;
                        } else {
                            max2 = s6q2;
                        }
                    }
                    System.out.println("The two maximum values are: " + max1 + " and " + max2);

                    double finalQuizRes6 =((double) max1 + max2) / 2.0 * 0.1;
                    double finalMidRes6 = (double) s6mid * 0.2;
                    double finals6ca = (double) finalQuizRes6 + finalMidRes6;

                    stuidlbl.setText(stuusername);
                    calbl.setText(Double.toString(finals6ca));
                    deptlbl.setText(dep);
                    courselbl.setText(cname);
                }
            }
                    
            
            
            
                 else {
                    Failed_Alert failed = new Failed_Alert();
                    failed.show();
                }
            
            }
        
         catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(lecturer_see_Marks_Grades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(lecturer_see_Marks_Grades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(lecturer_see_Marks_Grades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(lecturer_see_Marks_Grades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new lecturer_see_Marks_Grades().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel calbl;
    private javax.swing.JTextField cid;
    private javax.swing.JLabel courselbl;
    private javax.swing.JLabel deptlbl;
    private javax.swing.JPanel deptname;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JPanel lblca;
    private javax.swing.JLabel stuidlbl;
    // End of variables declaration//GEN-END:variables
}
