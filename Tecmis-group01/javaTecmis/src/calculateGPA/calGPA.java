/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package calculateGPA;  
import DBConn.DB;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author Hiru
 */
public class calGPA extends javax.swing.JFrame {
    /**
     * Creates new form calGPA
     * @throws java.sql.SQLException
     */
    public calGPA() throws SQLException {
        initComponents();
        
         DB db = new DB();
         db.getconnect();

        String caQuery = "SELECT s_id, q1, q2, q3, q4, ass1, ass2 FROM ca_2023_ICT1113 WHERE s_id = 'TG/2020/001'";
        ResultSet ca = db.stm.executeQuery(caQuery);

        double totalCA = 0.0;
        int numCA = 0;
        while (ca.next()) {
            double quiz01 = ca.getDouble("q1");
            double quiz02 = ca.getDouble("q2");
            double quiz03 = ca.getDouble("q3");
            double quiz04 = ca.getDouble("q4");
            double assessment1 = ca.getDouble("ass1");
            double assessment2 = ca.getDouble("ass2");

            double caMarks = (quiz01 + quiz02 + quiz03 + quiz04 + assessment1 + assessment2) / 6;
            totalCA += caMarks;
            numCA++;
        }
        String finalQuery = "SELECT s_id, theory, practical FROM final_exam_2023_ICT1113 WHERE s_id = 'TG/2020/001'";
        ResultSet finalExm = db.stm.executeQuery(finalQuery);

        double totalFinal = 0.0;
        int numFinal = 0;
        while (finalExm.next()) {
            double theory = finalExm.getDouble("theory");
            double prac = finalExm.getDouble("practical");

            double finalMarks = (theory + prac) / 2;
            totalFinal += finalMarks;
            numFinal++;
        }

        double caWeightage = 0.4;
        double finalWeightage = 0.6;
        double totalWeightage = caWeightage + finalWeightage;

        double avgCA = totalCA / numCA;
        double avgFinal = totalFinal / numFinal;

        double gpa = ((avgCA * caWeightage) + (avgFinal * finalWeightage)) / totalWeightage;

        System.out.println("GPA: " + gpa);

//            // Clean-up environment
//            finalResult.close();
//            caResult.close();
//            stmt.close();
//            conn.close();
//        } catch (SQLException se) {
//            // Handle errors for JDBC
//            se.printStackTrace();
//        } catch (Exception e) {
//            // Handle errors for Class.forName
//            e.printStackTrace();
//        } finally {
//            // Finally block used to close resources
//            try {
//                if (stmt != null) stmt.close();
//            } catch (SQLException se2) {
//            } // nothing we can do
//            try {
//                if (conn != null) conn.close();
//            } catch (SQLException se) {
//                se.printStackTrace();
//            } // end finally try
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(calGPA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(calGPA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(calGPA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(calGPA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new calGPA().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(calGPA.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
